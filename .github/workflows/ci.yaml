name: Continuous Integration

on:
  - push
  - pull_request

env:
  PYTHON_LATEST: "3.10"
  POETRY_VERSION: "1.1.11"

jobs:
  test-python:
    name: Tests on Linux for "${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: "pip install poetry==${{ env.POETRY_VERSION }} tox==3.24.4 tox-gh-actions==2.8.1"
      - name: Test with tox
        run: poetry run tox
      - name: Stash coverage data
        uses: "actions/upload-artifact@v2"
        with:
          name: coverage-data
          path: "coverage.xml"
          if-no-files-found: ignore

  test-platform:
    name: Tests on "${{ matrix.platform }}" for 3.7
    runs-on: "${{ matrix.platform }}"
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install
        run: "pip install poetry==${{ env.POETRY_VERSION }} tox==3.24.4 tox-gh-actions==2.8.1"
      - name: Test with tox
        run: poetry run tox

  report-coverage:
    name: Upload coverage data
    runs-on: "ubuntu-latest"
    needs: test-python
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Unstash coverage data
        uses: actions/download-artifact@v2
        with:
          name: coverage-data
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true


  package:
    name: Create distribution artefacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - run: "pip install poetry==${{ env.POETRY_VERSION }} twine==3.6.0"
      - run: poetry build
      - run: poetry run twine check dist/*
